{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asmaa\\\\Downloads\\\\product_crud\\\\product_frontend\\\\src\\\\components\\\\Cart\\\\Cart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Modal from '../UI/Modal';\nimport classes from './Cart.module.css';\nimport productService from '../../services/product-service';\nimport Input from '../UI/Input';\nimport { inputs } from '../../constants';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultFormInput = {\n  name: '',\n  quantity: '',\n  price: ''\n};\nconst Cart = props => {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n\n  //pre-fill the formInput with existing product details if it's in the editing mode\n  useEffect(() => {\n    setIsEditing(props.action === 'Edit');\n  }, [props.action]);\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required('Le nom est requis').max(50, 'Le nom est trop long'),\n    quantity: Yup.number().required('La quantité est requise').integer('La quantité doit être un nombre entier').positive('La quantité doit être positive'),\n    price: Yup.number().required('Le prix est requis').positive('Le prix doit être positif')\n  });\n  const handleAddProduct = formInput => {\n    productService.addProduct(formInput).then(response => {\n      props.onClose();\n    }).catch(error => {\n      const message = error.response.data.errors;\n      console.error(message);\n    });\n  };\n  const handleEditProduct = formInput => {\n    productService.editProduct(props.product.id, formInput).then(response => {\n      props.onClose();\n    }).catch(error => {\n      const message = error.response.data.errors;\n      console.error(message);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: props.product || defaultFormInput,\n      validationSchema: validationSchema,\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        isEditing ? handleEditProduct(values) : handleAddProduct(values);\n        setSubmitting(false);\n      },\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.total,\n          children: inputs.map(input => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.input,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: input.name,\n              children: input.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: input.type,\n              id: input.name,\n              name: input.name,\n              placeholder: input.placeholder\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: input.name,\n              component: \"div\",\n              className: classes.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this)]\n          }, input.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.actions,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: classes['button--alt'],\n            onClick: props.onClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: classes.button,\n            type: \"submit\",\n            disabled: isSubmitting,\n            children: isEditing ? 'Edit' : 'Add'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Cart, \"NMwrZ8atdcxOCK3DsL6hY1CdlTU=\");\n_c = Cart;\nexport default Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useState","useEffect","Modal","classes","productService","Input","inputs","Formik","Form","ErrorMessage","Yup","jsxDEV","_jsxDEV","defaultFormInput","name","quantity","price","Cart","props","_s","isEditing","setIsEditing","action","validationSchema","object","shape","string","required","max","number","integer","positive","handleAddProduct","formInput","addProduct","then","response","onClose","catch","error","message","data","errors","console","handleEditProduct","editProduct","product","id","children","initialValues","onSubmit","values","setSubmitting","isSubmitting","className","total","map","input","htmlFor","label","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","component","actions","onClick","button","disabled","_c","$RefreshReg$"],"sources":["C:/Users/asmaa/Downloads/product_crud/product_frontend/src/components/Cart/Cart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Modal from '../UI/Modal';\nimport classes from './Cart.module.css';\nimport productService from '../../services/product-service';\nimport Input from '../UI/Input';\nimport { inputs } from '../../constants';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nconst defaultFormInput = {\n  name: '',\n  quantity: '',\n  price: '',\n};\n\nconst Cart = (props) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  //pre-fill the formInput with existing product details if it's in the editing mode\n  useEffect(() => {\n    setIsEditing(props.action === 'Edit');\n  }, [props.action]);\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required('Le nom est requis').max(50, 'Le nom est trop long'),\n    quantity: Yup.number()\n      .required('La quantité est requise')\n      .integer('La quantité doit être un nombre entier')\n      .positive('La quantité doit être positive'),\n    price: Yup.number().required('Le prix est requis').positive('Le prix doit être positif'),\n  });\n\n  const handleAddProduct = (formInput) => {\n    productService\n      .addProduct(formInput)\n      .then((response) => {\n        props.onClose();\n      })\n      .catch((error) => {\n        const message = error.response.data.errors;\n        console.error(message);\n      });\n  };\n\n  const handleEditProduct = (formInput) => {\n    productService\n      .editProduct(props.product.id, formInput)\n      .then((response) => {\n        props.onClose();\n      })\n      .catch((error) => {\n        const message = error.response.data.errors;\n        console.error(message);\n      });\n  };\n\n  return (\n    <Modal onClose={props.onClose}>\n      <Formik\n        initialValues={props.product || defaultFormInput}\n        validationSchema={validationSchema}\n        onSubmit={(values, { setSubmitting }) => {\n          isEditing ? handleEditProduct(values) : handleAddProduct(values);\n          setSubmitting(false);\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <div className={classes.total}>\n              {inputs.map((input) => (\n                <div key={input.id} className={classes.input}>\n                  <label htmlFor={input.name}>{input.label}</label>\n                  <Input\n                    type={input.type}\n                    id={input.name}\n                    name={input.name}\n                    placeholder={input.placeholder}\n                  />\n                  <ErrorMessage name={input.name} component=\"div\" className={classes.error} />\n                </div>\n              ))}\n            </div>\n\n            <div className={classes.actions}>\n              <button className={classes['button--alt']} onClick={props.onClose}>\n                Close\n              </button>\n              <button className={classes.button} type=\"submit\" disabled={isSubmitting}>\n                {isEditing ? 'Edit' : 'Add'}\n              </button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </Modal>\n  );\n};\n\nexport default Cart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}